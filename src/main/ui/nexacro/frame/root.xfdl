<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="root" width="480" height="940" onload="root_onload" onsize="root_onsize" onkeydown="root_onkeydown" onvscroll="root_onvscroll" onlayoutchanged="root_onlayoutchanged" ondragmove="root_ondragmove" cssclass="frm_WF_main" ondevicebuttonup="root_ondevicebuttonup">
    <Layouts>
      <Layout height="940" width="480" screenid="Mobile_screen">
        <Static id="Static04" taborder="10" left="0" top="1960" right="0" visible="false" cssclass="sta_WF_conBox03" height="400"/>
        <Static id="Static05" taborder="11" left="0" top="Static04:0" right="0" cssclass="sta_WF_conBox04" visible="false" bottom="-1440"/>
        <Static id="Static03" taborder="9" left="0" top="780" height="1180" right="0" visible="false" cssclass="sta_WF_conBox02"/>
        <Static id="Static01" taborder="7" left="0" top="80" right="0" bottom="0" visible="false" cssclass="sta_WF_conBox01"/>
        <Static id="Static02" taborder="6" left="0" top="0" height="80" right="0" visible="false" cssclass="sta_TF_topArea"/>
        <Div id="divTop" taborder="0" left="0" top="0" height="64" right="0" formscrolltype="none" cssclass="div_TF_topArea" semantictag="header"/>
        <Div id="divLeftMenu" taborder="1" left="0" top="0" width="0" height="1250" visible="false" url="frame::leftmenu.xfdl" cssclass="div_LF_leftBg" semantictag="nav"/>
        <Div id="divWork" taborder="2" left="0" top="64" right="0" text="" cssclass="div_WF_conBox01" height="800" minheight="720" maxheight="" fittocontents="height" semantictag="section" async="false"/>
        <Static id="Static00" taborder="5" left="0" height="155" right="0" top="divWork:0" cssclass="sta_BF_footerArea"/>
        <Div id="divFooter" taborder="3" left="0" height="155" right="0" top="divWork:0" cssclass="div_BF_footerArea" semantictag="footer"/>
        <Div id="divMegaMenu" taborder="4" left="1280" top="0" width="1280" height="740" visible="false" cssclass="div_WF_megaBg" semantictag="nav"/>
        <Div id="divFloating" taborder="8" left="divWork:-60" top="751" width="50" height="160" semantictag="aside">
          <Layouts>
            <Layout>
              <Button id="btnContact" taborder="0" left="0" top="0" width="50" height="50" cssclass="btn_WF_contact" onclick="divFloating_btnContact_onclick" tooltipmessageid="go.to.ask" visible="false"/>
              <Button id="btnToTop" taborder="1" left="0" top="110" width="50" height="50" cssclass="btn_WF_toTop" onclick="divFloating_btnToTop_onclick" tooltipmessageid="scroll.to.top"/>
              <Button id="btnDesc" taborder="2" width="50" right="0" visible="false" height="50" top="55" onclick="divFloating_btnDesc_onclick" cssclass="btn_WF_descM"/>
              <Button id="btnSource" taborder="3" top="55" width="50" height="50" cssclass="btn_WF_source" visible="false" right="0" onclick="divFloating_btnSource_onclick" tooltipmessageid="source.download"/>
              <Button id="btnUrl" taborder="4" top="55" width="50" height="50" visible="false" right="0" tooltipmessageid="source.download" onclick="divFloating_btnUrl_onclick" cssclass="btn_WF_link"/>
            </Layout>
            <Layout name="large">
              <Button id="btnDesc" visible="false" top="55" width="50" height="50" right="0"/>
              <Button id="btnContact" visible="true" left="0" top="0" width="50" height="50"/>
              <Button id="btnSource" visible="true" top="110" width="50" height="50" right="0"/>
              <Button id="btnToTop" left="0" top="165" width="50" height="50"/>
              <Button id="btnUrl" top="55" width="50" height="50" right="0" tooltipmessageid="url.share" visible="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="sta00" taborder="12" left="divTop:-10" top="0" width="10" height="64"/>
      </Layout>
      <Layout name="large" width="1263" height="940" mobileorientation="portrait" screenid="Desktop_screen">
        <Div id="divWork" left="divLeftMenu:0" top="80" height="720" width="990" text=""/>
        <Div id="divLeftMenu" visible="true" width="273" left="0" top="80" height="720"/>
        <Div id="divTop" visible="true" height="80" left="0" top="0" width="1263" border="0px none,0px none,1px solid #8d8d8d"/>
        <Static id="Static02" border="0px none,0px none,1px solid #8D8D8D" visible="true"/>
        <Div id="divFooter" left="0" top="divWork:0" width="1263" height="140"/>
        <Div id="divFloating" left="divWork:-60" top="700" width="50" height="221"/>
        <Static id="Static00" visible="true"/>
        <Static id="Static01" visible="true"/>
        <Static id="Static04" top="1930" left="0" height="400" right="0"/>
        <Static id="Static03" height="1150" left="0" top="780" right="0"/>
        <Static id="Static05" left="0" top="Static04:0" height="580" visible="true" right="0"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
this.root_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//PC&&NRE 일 경우 Description 버튼 숨기고 위치 재조정
	if(nexacro.getApplication().IsNRE && !nexacro.getApplication().IsMobile){
		let y = this.divFloating.form.btnUrl.getOffsetTop();

		this.divFloating.form.btnUrl.visible = false;
		this.divFloating.form.btnSource.setOffsetTop(y);
		this.divFloating.form.btnToTop.setOffsetTop(y+55);
		this.divFloating.height = this.divFloating.form.btnToTop.getOffsetBottom()+5;
		this.divFloating.top = 700;
	}
	
	this.moveToCenter(obj.width, obj.height);
	this.moveToFloatingButton(0);
	this.fnIOFixed();

	nexacro._OnceCallbackTimer.callonce(this, function() { 
		this.divTop.url = "frame::top.xfdl";
		this.divMegaMenu.url = "frame::megamenu.xfdl";
		this.divWork.url = "frame::work.xfdl";
		this.divFooter.url = "frame::footer.xfdl";
		
		nexacro.applyI18n(this.divFloating.form);
	}, 10);
	
	//desc 부분 decorate된 링크 색상을 #2693D1로 바꾸기 위함
	if (system.navigatorname.indexOf("nexacro") == -1) {
		let sheet = document.createElement('style');
		let sheet_str = " a:link { color: #2693D1; text-decoration: none;}\na:visited { color: #2693D1; text-decoration: none;}";
		let head = document.head || document.getElementsByTagName('head')[0];
		sheet.type = 'text/css';
		sheet.appendChild(document.createTextNode(sheet_str));
		head.appendChild(sheet);
	}
	
	//v24에서 Android/iOS 모두 웹뷰방식으로 일원화되면서 모바일도 History 적용함. //20231219 milpaso
	//if (system.navigatorname.indexOf("nexacro") == -1) {
	if (nexacro.getApplication().IsMobile || system.navigatorname.indexOf("nexacro") == -1) {
		// History 기능 사용을 위해 초기화 (application 실행 시 한번만 호출)
		// 첫번째 인자는 뒤로가기, 앞으로가기가 실행됬을때 호출될 함수
		// 두번째 인자는 함수내에서 this 로 사용할 scope
		MyHistory.init(this.onChangeHistory, this);
	}
};

this.root_onsize = function(obj:nexacro.Form,e:nexacro.SizeEventInfo)
{
	this.moveToCenter(e.cx, e.cy);
	this.moveToFloatingButton(this.vscrollbar.pos);
};

this.root_onkeydown = function(obj:nexacro.Form,e:nexacro.KeyEventInfo)
{
	if (e.keycode == 27 && this.divMegaMenu.visible) {
		this.divMegaMenu.visible = false;
	}
};

this.root_onvscroll = function(obj:nexacro.Form,e:nexacro.ScrollEventInfo)
{
	this.moveToFloatingButton(e.pos);
};

// 브라우저의 뒤로가기, 앞으로가기 실행시 호출됨
this.onChangeHistory = function(hash)
{
	const app = nexacro.getApplication();

	app.setAllMenu();

	if (nexacro.isEmpty(hash) || hash == "main") {

		const menu_id = app.getParameter("menu_id");

		if(menu_id != "") {
			let gdsMenuIdx = app.gdsAllMenu.findRow('id', menu_id);

			if(gdsMenuIdx == -1) this.openMain();
			else this.openMenu(menu_id+"");
		} else {
			// 메인화면
			this.openMain();
		}
	} else {
		// hash id 를 확인하여 필요한 처리를 진행한다.
		this.openMenu(hash);
	}
};

this.moveToCenter = function(width, height)
{
	let x = 0;
	
	if (width > 1293+30) {
		x = (width - 1293+30) / 2;
		this.divFloating.left = "divWork:0";
	} else {
 		this.divFloating.left = "divWork:-60";
	}
	
	this.divTop.left = x;
	this.divMegaMenu.left = x;
	this.divLeftMenu.left = x;
	this.divFooter.left = x;
	
	if(nexacro.getApplication().IsMobile) this.divWork.setOffsetRight(width);
	
	this.resetScroll();
};

this.moveToFloatingButton = function(pos)
{
	let height = nexacro.getApplication().mainframe.height;
	let y = height - 280 + pos;
	this.divFloating.top = y;
};

this.showMegaMenu = function()
{
	this.divMegaMenu.visible = true;
};

this.hideMegaMenu = function()
{
	this.divMegaMenu.visible = false;
};

this.showSubMenu = function(menuId, menuNm, isClick)
{
	const form = this.divLeftMenu.form;
	form["showSubMenu"].call(form, menuId, menuNm, isClick);
	
	if (this.divWork.url == "frame::main.xfdl") {
		const app = nexacro.getApplication();
		let firstMenuId = app.gdsMenu.lookupNF("upid", menuId, "id");
		
		this.openMenu(firstMenuId);
	}
};

this.showMenuPage = function(menuId, menuUrl)
{
	this.vscrollbar.set_pos(0);
	
	//v24에서 Android/iOS 모두 웹뷰방식으로 일원화되면서 모바일도 History 적용함. //20231219 milpaso
	//if (system.navigatorname.indexOf("nexacro") == -1) {
	if (nexacro.getApplication().IsMobile || system.navigatorname.indexOf("nexacro") == -1) {
		// hash를 변경하여 History 에 등록 (현재 hash 와 같을 경우 History 가 생기지 않는다.)
		MyHistory.setLocationHash(menuId, "", "?menu_id=" + menuId);
	}

	const workForm = this.divWork.form;
	workForm["loadMenuPage"].call(workForm, menuId, menuUrl);
};

this.menuPageOnLoad = function()
{
	this.resetScroll();
	
	// min height 720
	let height = this.divWork.form.height;
	height = (height < 720) ? 720 : height;
	this.Static01.height = height;
	this.divLeftMenu.height = height;		
};

this.divFloating_btnContact_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	let url = "https://www.tobesoft.com/support/qna";
	if (nexacro.getApplication().langCode == "ko") {
		url = "https://www.tobesoft.com/support/qna";
	}
	
	system.execDefaultBrowser(url);
	
	if (system.navigatorname.indexOf("nexacro") == -1) {
		gtag('event', 'Button Click', {
			'event_category': "Link",
			'event_label': 'Go to Ask',
			'value': url
		});
	}
};

this.divFloating_btnToTop_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.vscrollbar.set_pos(0);
};

this.divFloating_btnDesc_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	const form = this.divWork.form;
	form["showDescription"].call(form);
	
	if (system.navigatorname.indexOf("nexacro") == -1) {
		gtag('event', 'Button Click', {
			'event_category': "Description",
			'event_label': 'Description',
			'value': form.menuInfo.menuName
		});
	}
};

this.setDescVisible = function(flag)
{
	this.divFloating.form.btnDesc.visible = flag;
};

this.root_onlayoutchanged = function(obj:nexacro.Form,e:nexacro.LayoutChangeEventInfo)
{
	this.resetScroll();
};

this.divFloating_btnSource_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.FileDownTransfer00.download(nexacro.getEnvironment().services["svc"].url+"/download/source");
	
	if (system.navigatorname.indexOf("nexacro") == -1) {
		gtag('event', 'Button Click', {
			'event_category': "Download",
			'event_label': 'sourceDownload',
			'value': '소스 다운로드'
		});
		
		gtag('event', 'page_view', {
			'page_path': 'source download',
			'page_title': '소스 다운로드'
		});
	}
};

this.divFloating_btnUrl_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	system.setClipboard("CF_TEXT", MyHistory.getContext().location.href);
	
	if(nexacro.getApplication().langCode == "ko"){
		this.alert("클립 보드에 주소가 복사되었습니다.");
	} else {
		this.alert("Address copied to clipboard.");
	}
};

this.root_ondevicebuttonup = function(obj:nexacro.Form,e:nexacro.DeviceButtonEventInfo)
{
	//Android 디바이스에서 입력된 디바이스 버튼
	if(e.button == 1) // MENU     
	{	
		
	}     
	else if(e.button == 2) // CANCEL     
	{   
		//경우: 1.Main 화면에서 back, 2.work에서 back (3.메뉴 팝업에서 back : mobilemenu.xfdl에서 처리)
		if (nexacro.getApplication().IsMobile) {
		
			if (this.gfnIsNull(this.divWork.url) || (this.divWork.url == "frame::main.xfdl")) {
				let sText="";
				if(nexacro.getApplication().langCode == "ko"){
					sText="종료하시겠습니까?";
				} else {
					sText="Are you sure you want to quit?";
				}
				
				if (this.confirm(sText)) {
					nexacro.getApplication().exit();	//앱종료
				}
			} else {
				MyHistory.back();
			}
		}
	}
};

/************************************************************************
 * message popup
 ************************************************************************/
this.fvNotiCount = 0;
this.createMessage = function(sMessage, sUserId)
{	
	let sId = "NOTI";
	let sUrl = "external::xpush_noti_pop.xfdl";
	let nLeft = null;
	let nTop = 81 + (this.fvNotiCount * 55);
	let nWidth = 250;
	let nHeight = 120;
	let nRight = 30;
	let nBottom = null;

	let objTile = new Div("divTile_" + sId + this.fvNotiCount, nLeft, nTop, nWidth, nHeight, nRight, nBottom);
	objTile.async = false;
	objTile.url = sUrl;
	objTile.portName = "위젯";
	objTile.usePort = "Y";
	objTile.form.MSG = {
		"sUserId" : sUserId,
		"sMessage" : sMessage
	}	
	
	this.addChild(objTile.name, objTile);
	objTile.show();

	objTile.form.btnResize.addEventHandler("ondrag", this.fnObjTile_ondrag, this);
	objTile.form.btnMove.addEventHandler("ondrag", this.fnObjTile_ondrag, this);
	
	for (let j = 0; j < objTile.form.components.length; j++)
	{
		objTile.form.components[j].targetDiv = objTile;
		objTile.form.components[j].addEventHandler("onclick", this.fnObjTile_onclick, this);
	}
	
	this.fvNotiCount++;
};

this.fnObjTile_onclick = function(obj, e)
{
	obj.targetDiv.bringToFront();
}

this.fnObjTile_ondrag = function(obj, e:nexacro.DragEventInfo)
{
	this.bDrag = true;
	this.fvTargetObj = obj.parent.parent;
	this.fvChildObj = obj;
	
	let nX;
	let nY;

	if (obj.name == "btnResize") {
		nX = nexacro.toNumber(e.canvasx);
		nY = nexacro.toNumber(e.canvasy);
	} else if (obj.name == "btnMove") {
		nX = nexacro.toNumber(obj.getOffsetLeft()) + nexacro.toNumber(e.canvasx);
		nY = nexacro.toNumber(obj.getOffsetTop()) + nexacro.toNumber(e.canvasy);
	}
	
	e.userdata = nX + "," + nY; 
	
	this.fvTargetObj.bringToFront();
	
	return true;
};

this.root_ondragmove = function(obj:nexacro.Form,e:nexacro.DragEventInfo)
{
	if(this.fvChildObj){
		let arrPoint = e.userdata.split(",");
		let nLeft, nTop, nRight, nBottom, nWidth, nHeight;
		
		if (this.fvChildObj.name == "btnResize") {
			nLeft = e.canvasx - this.getOffsetLeft() - this.fvTargetObj.getOffsetLeft() - arrPoint[0];
			nTop = e.canvasy - this.getOffsetTop() - this.fvTargetObj.getOffsetTop() - arrPoint[1];
			
			if (nLeft < 100) {
				nLeft = 100;
			}
			
			if (nTop < 100) {
				nTop = 100;
			}
			
			this.fvChildObj.move(nLeft, nTop);
			
			nWidth = this.fvChildObj.getOffsetRight() + 10;
			nHeight = this.fvChildObj.getOffsetBottom() + 10;
		
			this.fvTargetObj.setOffsetWidth(nWidth);
			this.fvTargetObj.setOffsetHeight(nHeight);
		} else if (this.fvChildObj.name == "btnMove") {
			nLeft = e.canvasx - this.getOffsetLeft() - arrPoint[0];
			nTop = e.canvasy - this.getOffsetTop() - arrPoint[1];
			nRight = nLeft + this.fvTargetObj.getOffsetWidth();
			nBottom = nTop + this.fvTargetObj.getOffsetHeight();
			
			if (nLeft < 0) {
				nLeft = 0;
			} else if (nRight > this.getOffsetWidth()) {
				nLeft = this.getOffsetWidth() - this.fvTargetObj.getOffsetWidth();
			}
			
			if (nTop < 0) {
				nTop = 0;
			} else if (nBottom > this.getOffsetHeight()) {
				nTop = this.getOffsetHeight() - this.fvTargetObj.getOffsetHeight();
			}
			
			this.fvTargetObj.move(nLeft, nTop);
		}
	}
};

this.fnCloseMemo = function(obj)
{
	this.removeChild(obj.name);
};

this.fnCloseAllMemo = function()
{
	for(let i=0; i<this.fvNotiCount; i++) {
		this.removeChild("divTile_NOTI" + i);
	}
};

//TitleBar Fix
this.fnIOFixed = function ()
{
	const app = nexacro.getApplication();
	if (app.IsNRE && !app.IsMobile) return; // NRE 환경에서는 top 고정X. v24 모바일 WRE/NRE 고정 가능
	//if (system.navigatorname.indexOf("nexacro") > -1) return;	// NRE 환경에서는 top 고정X
	
	const oFixedTarget01 = document.getElementById(this.nexacroDomId(this.divTop));		// divTop
	const oFixedTarget02 = document.getElementById(this.nexacroDomId(this.Static02));	// divTop line
	const oDivMegaMenu = document.getElementById(this.nexacroDomId(this.divMegaMenu));	// divMegaMenu
	const target = document.getElementById(this.nexacroDomId(this.sta00));				// 임의로 추가한 static
	const oVscroll = document.getElementById(this.nexacroDomId(this.vscrollbar));		// 세로스크롤바
	
	oFixedTarget01.style.position = 'fixed';
	oFixedTarget01.style.zIndex = 2;
	oFixedTarget02.style.position = 'fixed';
	oFixedTarget02.style.zIndex = 1;
	oVscroll.style.zIndex = 100;
	oDivMegaMenu.style.position = 'fixed';
	oDivMegaMenu.style.zIndex = 3;
	
// 	let options = {
// 		root		: null,
// 		// rootMargin	: '0px 0px ' + '-' + this.nFormMarginBottom + 'px' + ' 0px',
// 		threshold	: 0.45
// 	};
// 	
// 	let pThis = this;
// 	const io = new IntersectionObserver( function (entries, observer) {
// 			entries.forEach(function (entry) {
// 					// 요소가 사라지는 시점
// 					if (!entry.isIntersecting) {
// 						oFixedTarget01.style.position = 'fixed';
// 						oFixedTarget01.style.zIndex = 2;
// 						oFixedTarget02.style.position = 'fixed';
// 						oFixedTarget02.style.zIndex = 1;
// 						oVscroll.style.zIndex = 100;
// 						oDivMegaMenu.style.position = 'fixed';
// 						oDivMegaMenu.style.zIndex = 3;
// 						
// 					// 다시 요소가 보이는 시점
// 					} else {
// 						oFixedTarget01.style.position = '';
// 						oFixedTarget01.style.zIndex = '';
// 						oFixedTarget02.style.position = '';
// 						oFixedTarget02.style.zIndex = '';
// 						oVscroll.style.zIndex = '';
// 						oDivMegaMenu.style.position = '';
// 						oDivMegaMenu.style.zIndex = '';
// 					}
// 				});
// 		},options);
// 		
// 	io.observe(target);
};

this.nexacroDomId = function (objID)
{
	let generateID = "";
	let prtID = objID;	
	let i = 0;
	const objApp = nexacro.getApplication();
	const mainFrm = objApp.mainframe;
	
	while(prtID != mainFrm){
		if(prtID.toString() == "[object Form]") generateID = "form." + generateID;
		else generateID = prtID.name + ((generateID != "")?".":"") + generateID;
		i++;
		prtID = prtID.parent;	
	}	
	return "mainframe." + generateID;
};



/**
 * @class 값이 존재하는지 여부 체크 <br>
 * @param {String} sValue	
 * @return {Boolean} true/false
 * @example
 * var bNull = this.gfnIsNull("aaa");	// false
 */
this.gfnIsNull = function(sValue)
{
    if (new String(sValue).valueOf() == "undefined") return true;
    if (sValue == null) return true;
    
    let ChkStr = new String(sValue);

    if (ChkStr == null) return true;
    if (ChkStr.toString().length == 0 ) return true;
    return false;
};
]]></Script>
    <Objects>
      <FileDownTransfer id="FileDownTransfer00" onclick="FileDownTransfer00_onclick"/>
    </Objects>
  </Form>
</FDL>
